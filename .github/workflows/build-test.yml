name: Build and Test

on:
  push:
    branches:
      - "main"
      - "feature/*"
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ./api

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ----------------------------
      # Backend: Python API
      # ----------------------------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: pip

      - name: Install backend dependencies
        working-directory: api
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio pytest-cov

      - name: Run Python unit tests
        working-directory: api
        run: |
          echo "Running API tests..."
          pytest -v --maxfail=1 --disable-warnings --cache-clear --cov=src

      # ----------------------------
      # Frontend: React SPA
      # ----------------------------
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: npm

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Lint and Build React app
        working-directory: frontend
        run: |
          npm run lint --if-present
          npm run build --if-present

      # ----------------------------
      # Security and Quality
      # ----------------------------
      - name: Run Gitleaks for secret scanning
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --no-banner --redact

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Validate Terraform configuration
        working-directory: infra
        run: |
          terraform fmt -check
          terraform validate
